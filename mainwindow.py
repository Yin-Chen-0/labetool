# -*- coding: utf-8 -*-

# Form implementation generated from reading ui file 'mainwindow.ui'
#
# Created by: PyQt5 UI code generator 5.15.2
#
# WARNING: Any manual changes made to this file will be lost when pyuic5 is
# run again.  Do not edit this file unless you know what you are doing.
import os

from PyQt5 import QtCore, QtGui, QtWidgets
from PyQt5.QtWidgets import QFileDialog, QMessageBox, QWidget, QListView, QAbstractItemView, QTreeView, QPlainTextEdit
from PIL import Image


class Ui_MainWindow(QWidget):
    filelists = []
    imgs = ['png','jpg','JPEG','bmp','JPG']

    def setupUi(self, MainWindow):
        MainWindow.setObjectName("MainWindow")
        MainWindow.resize(1500, 927)
        self.centralwidget = QtWidgets.QWidget(MainWindow)
        self.centralwidget.setObjectName("centralwidget")
        self.label_display = QtWidgets.QLabel(self.centralwidget)
        self.label_display.setGeometry(QtCore.QRect(220, 0, 981, 851))
        self.label_display.setAutoFillBackground(False)
        self.label_display.setStyleSheet("")
        self.label_display.setFrameShape(QtWidgets.QFrame.WinPanel)
        self.label_display.setFrameShadow(QtWidgets.QFrame.Plain)
        self.label_display.setMidLineWidth(0)
        self.label_display.setObjectName("label_display")
        self.widget_2 = QtWidgets.QWidget(self.centralwidget)
        self.widget_2.setGeometry(QtCore.QRect(1210, 470, 271, 381))
        self.widget_2.setObjectName("widget_2")
        self.verticalLayout_2 = QtWidgets.QVBoxLayout(self.widget_2)
        self.verticalLayout_2.setContentsMargins(0, 0, 0, 0)
        self.verticalLayout_2.setObjectName("verticalLayout_2")
        self.label_2 = QtWidgets.QLabel(self.widget_2)
        self.label_2.setObjectName("label_2")
        self.verticalLayout_2.addWidget(self.label_2)
        self.plainTextEdit_fileLists = QtWidgets.QPlainTextEdit(self.widget_2)
        self.plainTextEdit_fileLists.setLineWrapMode(QtWidgets.QPlainTextEdit.NoWrap)

        self.plainTextEdit_fileLists.setObjectName("plainTextEdit_fileLists")
        self.verticalLayout_2.addWidget(self.plainTextEdit_fileLists)
        self.widget_3 = QtWidgets.QWidget(self.centralwidget)
        self.widget_3.setGeometry(QtCore.QRect(530, 650, 120, 80))
        self.widget_3.setObjectName("widget_3")
        self.layoutWidget = QtWidgets.QWidget(self.centralwidget)
        self.layoutWidget.setGeometry(QtCore.QRect(20, 50, 171, 651))
        self.layoutWidget.setObjectName("layoutWidget")
        self.verticalLayout_3 = QtWidgets.QVBoxLayout(self.layoutWidget)
        self.verticalLayout_3.setContentsMargins(0, 0, 0, 0)
        self.verticalLayout_3.setObjectName("verticalLayout_3")
        self.widget = QtWidgets.QWidget(self.layoutWidget)
        self.widget.setObjectName("widget")
        self.verticalLayout = QtWidgets.QVBoxLayout(self.widget)
        self.verticalLayout.setObjectName("verticalLayout")
        self.pushButton_openFile = QtWidgets.QPushButton(self.widget)
        self.pushButton_openFile.setObjectName("pushButton_openFile")
        self.verticalLayout.addWidget(self.pushButton_openFile)
        self.pushButton_openDir = QtWidgets.QPushButton(self.widget)
        self.pushButton_openDir.setObjectName("pushButton_openDir")
        self.verticalLayout.addWidget(self.pushButton_openDir)
        self.pushButton_changeSavePath = QtWidgets.QPushButton(self.widget)
        self.pushButton_changeSavePath.setObjectName("pushButton_changeSavePath")
        self.verticalLayout.addWidget(self.pushButton_changeSavePath)
        self.pushButton_nextImg = QtWidgets.QPushButton(self.widget)
        self.pushButton_nextImg.setObjectName("pushButton_nextImg")
        self.verticalLayout.addWidget(self.pushButton_nextImg)
        self.pushButton_lastImg = QtWidgets.QPushButton(self.widget)
        self.pushButton_lastImg.setObjectName("pushButton_lastImg")
        self.verticalLayout.addWidget(self.pushButton_lastImg)
        self.pushButton_Save = QtWidgets.QPushButton(self.widget)
        self.pushButton_Save.setObjectName("pushButton_Save")
        self.verticalLayout.addWidget(self.pushButton_Save)
        self.pushButton_Exit = QtWidgets.QPushButton(self.widget)
        self.pushButton_Exit.setObjectName("pushButton_Exit")
        self.verticalLayout.addWidget(self.pushButton_Exit)
        self.verticalLayout_3.addWidget(self.widget)
        MainWindow.setCentralWidget(self.centralwidget)
        self.menubar = QtWidgets.QMenuBar(MainWindow)
        self.menubar.setGeometry(QtCore.QRect(0, 0, 1500, 35))
        self.menubar.setObjectName("menubar")
        self.menu = QtWidgets.QMenu(self.menubar)
        self.menu.setObjectName("menu")
        self.menu_E = QtWidgets.QMenu(self.menubar)
        self.menu_E.setObjectName("menu_E")
        self.menu_V = QtWidgets.QMenu(self.menubar)
        self.menu_V.setObjectName("menu_V")
        self.menu_H = QtWidgets.QMenu(self.menubar)
        self.menu_H.setObjectName("menu_H")
        MainWindow.setMenuBar(self.menubar)
        self.statusbar = QtWidgets.QStatusBar(MainWindow)
        self.statusbar.setObjectName("statusbar")
        MainWindow.setStatusBar(self.statusbar)
        self.action = QtWidgets.QAction(MainWindow)
        self.action.setObjectName("action")
        self.action_2 = QtWidgets.QAction(MainWindow)
        self.action_2.setObjectName("action_2")
        self.action_3 = QtWidgets.QAction(MainWindow)
        self.action_3.setObjectName("action_3")
        self.menu.addAction(self.action)
        self.menu_E.addAction(self.action_2)
        self.menu_H.addAction(self.action_3)
        self.menubar.addAction(self.menu.menuAction())
        self.menubar.addAction(self.menu_E.menuAction())
        self.menubar.addAction(self.menu_V.menuAction())
        self.menubar.addAction(self.menu_H.menuAction())

        self.retranslateUi(MainWindow)
        QtCore.QMetaObject.connectSlotsByName(MainWindow)

    def retranslateUi(self, MainWindow):
        _translate = QtCore.QCoreApplication.translate
        MainWindow.setWindowTitle(_translate("MainWindow", "MainWindow"))
        self.label_display.setText(_translate("MainWindow", ""))
        self.label_2.setText(_translate("MainWindow", "文件列表"))
        self.pushButton_openFile.setText(_translate("MainWindow", "打开文件"))
        self.pushButton_openDir.setText(_translate("MainWindow", "打开目录"))
        self.pushButton_changeSavePath.setText(_translate("MainWindow", "改变存放目录"))
        self.pushButton_nextImg.setText(_translate("MainWindow", "下一个图像"))
        self.pushButton_lastImg.setText(_translate("MainWindow", "上一个图像"))
        self.pushButton_Save.setText(_translate("MainWindow", "保存"))
        self.pushButton_Exit.setText(_translate("MainWindow", "退出"))
        self.menu.setTitle(_translate("MainWindow", "文件(F)"))
        self.menu_E.setTitle(_translate("MainWindow", "编辑(E)"))
        self.menu_V.setTitle(_translate("MainWindow", "查看(V)"))
        self.menu_H.setTitle(_translate("MainWindow", "帮助(H)"))
        self.action.setText(_translate("MainWindow", "打开"))
        self.action_2.setText(_translate("MainWindow", "撤销"))
        self.action_3.setText(_translate("MainWindow", "点我跳转"))
        self.pushButton_Exit.clicked.connect(MainWindow.close)
        self.initSignasAndSolts()

    def initSignasAndSolts(self):
        self.pushButton_openFile.clicked.connect(self.openFile)
        self.pushButton_openDir.clicked.connect(self.openDirs)

    def openFile(self):
        dig = QFileDialog()
        filenames = dig.getOpenFileName(self, '选择图片', './', 'Image files (*.jpg  *.png *.jpeg )')
        if filenames[0] == '':
            msg_box = QMessageBox(QMessageBox.Warning, 'Warning', '没有正确选择文件！')
            msg_box.exec_()
            return
        else:
            self.showImg(filenames[0])

    def openDirs(self):
        fileDlg = QFileDialog()
        fileDlg.setFileMode(QFileDialog.DirectoryOnly)
        fileDlg.setOption(QFileDialog.DontUseNativeDialog, True)
        fileDlg.setDirectory("./")
        listView = fileDlg.findChild(QListView, "listView")
        if listView:
            listView.setSelectionMode(QAbstractItemView.ExtendedSelection)
        treeView = fileDlg.findChild(QTreeView, "treeView")
        if treeView:
            treeView.setSelectionMode(QAbstractItemView.ExtendedSelection)
        if fileDlg.exec_():
            folders = fileDlg.selectedFiles()
            if len(folders) < 1:
                return
            for file in os.listdir(folders[0]):
                file  = folders[0] + "/" + file
                self.filelists.append(file)
                self.plainTextEdit_fileLists.appendPlainText(file)
        self.showImg(self.filelists[0])

    def showImg(self, filename):
        if filename.split(".")[-1] not in self.imgs:
            msg_box = QMessageBox(QMessageBox.Warning, 'Warning', '图片格式只能是常见格式！')
            msg_box.exec_()
        img = Image.open(filename)
        size = self.label_display.size()
        size = (size.width(), size.height())
        img = img.resize(size)
        img = img.toqpixmap()
        self.label_display.setPixmap(img)
